{"version":3,"sources":["components/BeanEater.gif","components/Loader.js","components/newsList.js","components/searchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","src","Gif","alt","NewsList","news","isLoading","length","map","newItem","href","url","title","objectID","Searchbar","search","useState","inputValue","setInputValue","type","value","placeholder","onChange","target","onClick","App","setNews","searchQuery","setSearchQuery","setLoading","useEffect","a","axios","get","then","response","data","hits","alert","error","console","log","fetchNews","className","class","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAAe,G,YAAA,IAA0B,uC,OCG1B,SAASA,IACtB,OACE,qBAAKC,IAAKC,EAAKC,IAAI,eCDR,SAASC,EAAT,GAAsC,IAAnBC,EAAkB,EAAlBA,KAE9B,OAFgD,EAAZC,UAGhC,cAACN,EAAD,IAEA,mCACI,6BACqB,IAAhBK,EAAKE,QAAgBF,EAAKG,KAAI,SAACC,GAAD,OAC3B,6BACE,oBAAGC,KAAMD,EAAQE,IAAjB,eAAyB,6BAAKF,EAAQG,QAAtC,QADOH,EAAQI,iBCTtB,SAASC,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAEnC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OACI,gCACF,uBAAOC,KAAK,SAASC,MAAOH,EAAYI,YAAa,iBAAkBC,SARzE,YAAoC,IAATC,EAAQ,EAARA,OACzBL,EAAcK,EAAOH,UASrB,wBAAQI,QAAW,kBAAMT,EAAOE,IAAhC,uBCwDWQ,MAlEf,WACC,MAAwBT,mBAAS,IAAjC,mBAAOX,EAAP,KAAaqB,EAAb,KACA,EAAsCV,mBAAS,SAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAgCZ,oBAAS,GAAzC,mBAAOV,EAAP,KAAkBuB,EAAlB,KAgCC,OA9BAC,qBAAU,WAAM,4CACd,sBAAAC,EAAA,sDACE,IACKC,IAAMC,IAAN,oDAAuDN,EAAvD,gBACAO,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KAAKC,KAER,IAAhBD,EAAK7B,QACNsB,GAAW,GACXS,MAAM,oBAGPZ,EAAQU,GACTP,GAAW,OAEnB,MAAMU,GACJC,QAAQC,IAAI,QAASF,GACrBD,MAAO,eAhBT,4CADc,uBAAC,WAAD,wBAmBdI,KAIA,CAACf,IAQD,sBAAKgB,UAAU,MAAf,UACJ,iCACE,kDAEI,sBAAKA,UAAU,aAAf,UACE,mBAAGjC,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,eACA,mBAAGA,KAAK,IAAIkC,MAAM,SAAlB,eACA,mBAAGlC,KAAK,IAAR,eACA,mBAAGA,KAAK,IAAR,eACA,mBAAGA,KAAK,IAAR,eACA,mBAAGA,KAAK,IAAR,eACA,mBAAGA,KAAK,IAAR,qBAIF,cAAC,EAAD,CAAWK,OAtBf,SAAsBE,GACpBW,EAAeX,MAsBb,cAACb,EAAD,CACAE,UAAWA,EACXD,KAAMA,IAEV,iCACA,gECrDawC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7e3b041.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/BeanEater.a9f85f3c.gif\";","import React from 'react';\r\nimport Gif from './BeanEater.gif'\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <img src={Gif} alt='Bean Eater' />\r\n  );\r\n}","import React from \"react\";\r\nimport './news.css';\r\nimport Loader from './Loader.js';\r\n\r\nexport default function NewsList({news, isLoading}) {\r\n\r\n    return isLoading ? (\r\n        <Loader /> \r\n    ) : (\r\n        <> \r\n            <ul>\r\n                {news.length !== 0 && news.map((newItem) =>(\r\n                    <li key={newItem.objectID}>\r\n                      <a href={newItem.url} >  <h2>{newItem.title}</h2> </a>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n\r\n        </ >\r\n    )\r\n\r\n}","import React, {useState} from 'react';\r\nimport './news.css';\r\n\r\nexport default function Searchbar ( {search} ) {\r\n\r\n  const [inputValue, setInputValue] = useState('')\r\n\r\n  function handleInputValue({target}){\r\n    setInputValue(target.value);\r\n  \r\n  }\r\n \r\n\r\n  return (\r\n      <div>\r\n    <input type='search' value={inputValue} placeholder={\"Search keyword\"} onChange={handleInputValue}\r\n    />\r\n    <button onClick = {() => search(inputValue)}>\r\n      Search</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\nimport axios from  'axios'; \nimport './App.css';\nimport NewsList from './components/newsList';\nimport SearchBar from './components/searchBar';\n\n\nfunction App() {\n const [news, setNews] = useState([])\n const [searchQuery, setSearchQuery] = useState('react')\n const [isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    async function fetchNews() {\n      try {\n           axios.get(`http://hn.algolia.com/api/v1/search?query=${searchQuery}&tags=story`)\n          .then((response) =>{ \n            const data = response.data.hits ;\n\n            if(data.length === 0) {\n              setLoading(false);\n              alert('no match found');\n            } else\n\n            {setNews(data);\n            setLoading(false)}\n          });\n  } catch(error) {\n      console.log(\"error\", error);\n      alert ('fatal error')}\n    }\n    fetchNews();\n\n   // setInterval(fetchNews, 4000);\n\n  },[searchQuery])\n\n  function handleSearch(inputValue) {\n    setSearchQuery(inputValue)\n    \n  }\n\n  return (\n    <div className=\"App\">\n<header>\n  <h1>Hacker News!!!</h1>\n  </header>\n      <div className=\"pagination\">\n        <a href=\"#\">&laquo;</a>\n        <a href=\"#\">1</a>\n        <a href=\"#\" class=\"active\">2</a>\n        <a href=\"#\">3</a>\n        <a href=\"#\">4</a>\n        <a href=\"#\">5</a>\n        <a href=\"#\">6</a>\n        <a href=\"#\">&raquo;</a>\n    </div>\n\n      \n      <SearchBar search= {handleSearch} />\n      <NewsList \n      isLoading={isLoading}\n      news={news} /> \n      \n  <footer>\n  <h1>Read The Latest Gist !!!</h1>\n  </footer>\n\n    </div>\n\n  )\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}